// Code used for production

var scene, scene2, renderer, camera, controls, groups, visibility, group, insetwidth, insetheight, size, travel;

const extrudeSettings = {
    steps: 2,
    depth: 30,
    bevelEnabled: false
};

const path = [[-1156, 438, 20], [-1154, 440, 20], [-1152, 442, 20], [-1150, 444, 20], [-1148, 446, 20], [-1150, 448, 20], [-1152, 450, 20], [-1154, 452, 20], [-1156, 454, 20], [-1158, 456, 20], [-1160, 458, 20], [-1162, 460, 20], [-1164, 462, 20], [-1166, 464, 20], [-1168, 466, 20], [-1170, 468, 20], [-1172, 470, 20], [-1174, 472, 20], [-1176, 474, 20], [-1178, 476, 20], [-1180, 478, 20], [-1182, 480, 20], [-1184, 482, 20], [-1186, 484, 20], [-1188, 486, 20], [-1190, 488, 20], [-1192, 490, 20], [-1194, 492, 20], [-1196, 494, 20], [-1198, 496, 20], [-1200, 498, 20], [-1202, 500, 20], [-1202, 502, 20], [-1200, 504, 20], [-1198, 504, 20], [-1196, 504, 20], [-1194, 504, 20], [-1192, 504, 20], [-1190, 504, 20], [-1188, 504, 20], [-1186, 504, 20], [-1184, 504, 20], [-1182, 504, 20], [-1180, 504, 20], [-1178, 504, 20], [-1176, 504, 20], [-1174, 504, 20], [-1172, 504, 20], [-1170, 504, 20], [-1168, 504, 20], [-1166, 504, 20], [-1164, 504, 20], [-1162, 504, 20], [-1160, 504, 20], [-1158, 504, 20], [-1156, 504, 20], [-1154, 504, 20], [-1152, 504, 20], [-1150, 504, 20], [-1148, 504, 20], [-1146, 504, 20], [-1144, 504, 20], [-1142, 504, 20], [-1140, 504, 20], [-1138, 504, 20], [-1136, 504, 20], [-1134, 504, 20], [-1132, 504, 20], [-1130, 504, 20], [-1128, 504, 20], [-1126, 504, 20], [-1124, 504, 20], [-1122, 504, 20], [-1120, 504, 20], [-1118, 504, 20], [-1116, 504, 20], [-1114, 504, 20], [-1112, 504, 20], [-1110, 504, 20], [-1108, 504, 20], [-1106, 504, 20], [-1104, 504, 20], [-1102, 502, 20], [-1100, 500, 20], [-1098, 498, 20], [-1096, 496, 20], [-1094, 494, 20], [-1092, 492, 20], [-1090, 490, 20], [-1088, 488, 20], [-1086, 486, 20], [-1084, 484, 20], [-1082, 482, 20], [-1080, 480, 20], [-1078, 478, 20], [-1076, 478, 20], [-1074, 480, 20], [-1072, 482, 20], [-1070, 482, 20], [-1068, 482, 20], [-1066, 482, 20], [-1064, 482, 20], [-1062, 482, 20], [-1060, 482, 20], [-1058, 482, 20], [-1056, 482, 20], [-1054, 482, 20], [-1052, 482, 20], [-1050, 482, 20], [-1048, 480, 20], [-1046, 478, 20], [-1044, 476, 20], [-1042, 474, 20], [-1040, 472, 20], [-1038, 470, 20], [-1036, 468, 20], [-1034, 466, 20], [-1032, 464, 20], [-1030, 462, 20], [-1028, 460, 20], [-1026, 458, 20], [-1024, 456, 20], [-1022, 454, 20], [-1020, 452, 20], [-1018, 450, 20], [-1016, 448, 20], [-1014, 446, 20], [-1012, 444, 20], [-1010, 442, 20], [-1008, 440, 20], [-1006, 438, 20], [-1004, 436, 20], [-1002, 434, 20], [-1000, 432, 20], [-998, 430, 20], [-996, 428, 20], [-994, 426, 20], [-992, 424, 20], [-990, 422, 20], [-988, 420, 20], [-986, 418, 20], [-984, 416, 20], [-982, 414, 20], [-980, 412, 20], [-978, 410, 20], [-976, 408, 20], [-974, 406, 20], [-972, 404, 20], [-970, 402, 20], [-968, 400, 20], [-966, 398, 20], [-964, 396, 20], [-962, 394, 20], [-960, 392, 20], [-958, 390, 20], [-956, 388, 20], [-954, 386, 20], [-952, 384, 20], [-950, 382, 20], [-948, 380, 20], [-946, 378, 20], [-944, 376, 20], [-942, 374, 20], [-940, 372, 20], [-938, 370, 20], [-936, 368, 20], [-934, 366, 20], [-932, 364, 20], [-930, 362, 20], [-928, 360, 20], [-926, 358, 20], [-924, 356, 20], [-922, 354, 20], [-920, 352, 20], [-918, 350, 20], [-916, 348, 20], [-914, 346, 20], [-912, 344, 20], [-910, 342, 20], [-908, 340, 20], [-906, 338, 20], [-904, 336, 20], [-902, 334, 20], [-900, 332, 20], [-898, 330, 20], [-896, 328, 20], [-894, 326, 20], [-892, 324, 20], [-890, 322, 20], [-888, 320, 20], [-886, 318, 20], [-884, 316, 20], [-882, 314, 20], [-880, 312, 20], [-878, 310, 20], [-876, 308, 20], [-874, 306, 20], [-872, 304, 20], [-870, 302, 20], [-868, 300, 20], [-866, 298, 20], [-864, 296, 20], [-862, 294, 20], [-860, 292, 20], [-858, 290, 20], [-856, 288, 20], [-854, 286, 20], [-854, 284, 20], [-854, 282, 20], [-854, 280, 20], [-854, 278, 20], [-854, 276, 20], [-854, 274, 20], [-854, 272, 20], [-854, 270, 20], [-854, 268, 20], [-854, 266, 20], [-854, 264, 20], [-854, 262, 20], [-854, 260, 20], [-854, 258, 20], [-854, 256, 20], [-854, 254, 20], [-854, 252, 20], [-854, 250, 20], [-854, 248, 20], [-854, 246, 20], [-854, 244, 20], [-854, 242, 20], [-854, 240, 20], [-854, 238, 20], [-856, 236, 20], [-858, 234, 20], [-860, 232, 20], [-862, 230, 20], [-864, 228, 20], [-866, 226, 20], [-868, 224, 20], [-870, 222, 20], [-872, 220, 20], [-874, 218, 20], [-874, 216, 20], [-874, 214, 20], [-874, 212, 20], [-874, 210, 20], [-874, 208, 20], [-872, 206, 20], [-870, 204, 20], [-868, 202, 20], [-866, 200, 20], [-864, 198, 20], [-862, 196, 20], [-860, 194, 20], [-858, 192, 20], [-856, 190, 20], [-854, 188, 20], [-852, 186, 20], [-850, 184, 20], [-848, 182, 20], [-846, 180, 20], [-844, 178, 20], [-842, 176, 20], [-840, 174, 20], [-838, 172, 20], [-836, 170, 20], [-834, 168, 20], [-832, 166, 20], [-830, 164, 20], [-828, 162, 20], [-826, 160, 20], [-824, 158, 20], [-822, 156, 20], [-820, 154, 20], [-818, 152, 20], [-816, 150, 20], [-814, 148, 20], [-812, 146, 20], [-810, 144, 20], [-808, 142, 20], [-806, 140, 20], [-804, 138, 20], [-802, 136, 20], [-800, 134, 20], [-798, 132, 20], [-796, 130, 20], [-794, 130, 20], [-792, 132, 20], [-790, 134, 20], [-788, 136, 20], [-786, 138, 20], [-784, 140, 20], [-782, 142, 20], [-780, 144, 20], [-778, 146, 20], [-776, 148, 20], [-774, 150, 20], [-772, 152, 20], [-770, 154, 20], [-768, 154, 20], [-766, 154, 20], [-764, 154, 20], [-762, 154, 20], [-760, 154, 20], [-758, 154, 20], [-756, 154, 20], [-754, 154, 20], [-752, 152, 20], [-750, 150, 20], [-748, 148, 20], [-746, 146, 20], [-744, 144, 20], [-742, 142, 20], [-740, 140, 20], [-738, 138, 20], [-736, 136, 20], [-734, 134, 20], [-732, 132, 20], [-730, 130, 20], [-728, 132, 20], [-726, 134, 20], [-724, 134, 20], [-722, 134, 20], [-720, 134, 20], [-718, 134, 20], [-716, 134, 20], [-714, 134, 20], [-712, 134, 20], [-710, 134, 20], [-708, 134, 20], [-706, 134, 20], [-704, 134, 20], [-702, 134, 20], [-700, 134, 20], [-698, 134, 20], [-696, 134, 20], [-694, 134, 20], [-692, 134, 20], [-690, 134, 20], [-688, 134, 20], [-686, 134, 20], [-684, 134, 20], [-682, 134, 20], [-680, 134, 20], [-678, 134, 20], [-676, 134, 20], [-674, 134, 20], [-672, 132, 20], [-670, 130, 20], [-668, 130, 20], [-666, 132, 20], [-664, 134, 20], [-662, 136, 20], [-660, 138, 20], [-658, 140, 20], [-656, 142, 20], [-654, 144, 20], [-652, 146, 20], [-650, 148, 20], [-648, 150, 20], [-646, 152, 20], [-644, 154, 20], [-642, 156, 20], [-640, 158, 20], [-638, 160, 20], [-636, 162, 20], [-634, 164, 20], [-632, 166, 20], [-630, 168, 20], [-628, 170, 20], [-626, 172, 20], [-624, 174, 20], [-622, 174, 20], [-620, 174, 20], [-618, 174, 20], [-616, 174, 20], [-614, 174, 20], [-612, 172, 20], [-610, 170, 20], [-608, 168, 20], [-606, 166, 20], [-604, 164, 20], [-602, 162, 20], [-600, 160, 20], [-598, 158, 20], [-596, 156, 20], [-594, 154, 20], [-592, 152, 20], [-590, 150, 20], [-588, 148, 20], [-586, 146, 20], [-584, 144, 20], [-582, 142, 20], [-580, 140, 20], [-578, 138, 20], [-576, 136, 20], [-574, 134, 20], [-572, 132, 20], [-570, 132, 20], [-568, 132, 20], [-566, 132, 20], [-564, 132, 20], [-562, 132, 20], [-560, 132, 20], [-558, 132, 20], [-556, 132, 20], [-554, 132, 20], [-552, 132, 20], [-550, 132, 20], [-548, 132, 20], [-546, 132, 20], [-544, 132, 20], [-542, 132, 20], [-540, 132, 20], [-538, 132, 20], [-536, 132, 20], [-534, 132, 20], [-532, 132, 20], [-530, 132, 20], [-528, 132, 20], [-526, 132, 20], [-524, 132, 20], [-522, 132, 20], [-520, 132, 20], [-518, 132, 20], [-516, 132, 20], [-514, 132, 20], [-512, 132, 20], [-510, 132, 20], [-508, 132, 20], [-506, 132, 20], [-504, 132, 20], [-502, 132, 20], [-500, 132, 20], [-498, 134, 20], [-496, 136, 20], [-494, 138, 20], [-492, 140, 20], [-490, 142, 20], [-488, 144, 20], [-486, 146, 20], [-484, 148, 20], [-482, 150, 20], [-480, 152, 20], [-478, 154, 20], [-476, 156, 20], [-474, 158, 20], [-472, 160, 20], [-470, 162, 20], [-468, 164, 20], [-466, 166, 20], [-464, 168, 20], [-462, 170, 20], [-460, 172, 20], [-458, 174, 20], [-456, 174, 20], [-454, 174, 20], [-452, 174, 20], [-450, 174, 20], [-448, 174, 20], [-446, 172, 20], [-444, 170, 20], [-442, 168, 20], [-440, 166, 20], [-438, 164, 20], [-436, 164, 20], [-434, 166, 20], [-432, 166, 20], [-430, 166, 20], [-428, 166, 20], [-426, 164, 20], [-424, 164, 20], [-422, 164, 20], [-420, 162, 20], [-418, 160, 20], [-416, 158, 20], [-414, 156, 20], [-412, 154, 20], [-410, 152, 20], [-408, 150, 20], [-406, 148, 20], [-404, 146, 20], [-402, 144, 20], [-400, 142, 20], [-398, 140, 20], [-396, 138, 20], [-394, 136, 20], [-392, 134, 20], [-390, 132, 20], [-388, 130, 20], [-386, 128, 20], [-384, 126, 20], [-382, 124, 20], [-380, 122, 20], [-378, 120, 20], [-376, 118, 20], [-374, 116, 20], [-372, 114, 20], [-370, 114, 20], [-368, 114, 20], [-366, 112, 20], [-364, 112, 20], [-362, 114, 20], [-360, 116, 20], [-358, 118, 20], [-356, 120, 20], [-354, 122, 20], [-352, 124, 20], [-350, 126, 20], [-348, 128, 20], [-346, 130, 20], [-344, 132, 20], [-342, 134, 20], [-340, 136, 20], [-338, 138, 20], [-336, 140, 20], [-334, 142, 20], [-332, 144, 20], [-330, 146, 20], [-328, 148, 20], [-326, 150, 20], [-324, 152, 20], [-322, 154, 20], [-320, 156, 20], [-318, 158, 20], [-316, 160, 20], [-314, 162, 20], [-312, 164, 20], [-310, 166, 20], [-308, 168, 20], [-306, 170, 20], [-304, 172, 20], [-302, 174, 20], [-300, 176, 20], [-298, 178, 20], [-296, 180, 20], [-294, 182, 20], [-292, 184, 20], [-290, 184, 20], [-288, 186, 20], [-286, 184, 20], [-284, 184, 20], [-282, 184, 20], [-280, 186, 20], [-278, 184, 20], [-276, 186, 20], [-274, 188, 20], [-272, 190, 20], [-270, 192, 20], [-268, 194, 20], [-266, 196, 20], [-264, 198, 20], [-262, 200, 20], [-260, 202, 20], [-258, 204, 20], [-256, 206, 20], [-254, 208, 20], [-252, 210, 20], [-250, 212, 20], [-248, 210, 20], [-246, 208, 20], [-244, 206, 20], [-242, 204, 20], [-240, 202, 20], [-238, 200, 20], [-236, 198, 20], [-234, 198, 20], [-232, 200, 20], [-230, 202, 20], [-228, 204, 20], [-226, 206, 20], [-224, 208, 20], [-222, 210, 20], [-220, 212, 20], [-218, 214, 20], [-216, 216, 20], [-214, 218, 20], [-212, 220, 20], [-210, 222, 20], [-208, 224, 20], [-206, 226, 20], [-204, 226, 20], [-202, 224, 20], [-200, 224, 20], [-198, 226, 20], [-196, 224, 20], [-194, 222, 20], [-192, 220, 20], [-190, 218, 20], [-188, 216, 20], [-186, 214, 20], [-184, 212, 20], [-182, 210, 20], [-180, 208, 20], [-178, 210, 20], [-176, 212, 20], [-174, 212, 20], [-172, 212, 20], [-170, 212, 20], [-168, 212, 20], [-166, 212, 20], [-164, 212, 20], [-162, 212, 20], [-160, 212, 20], [-158, 212, 20], [-156, 212, 20], [-154, 212, 20], [-152, 212, 20], [-150, 212, 20], [-148, 212, 20], [-146, 212, 20], [-144, 212, 20], [-142, 212, 20], [-140, 212, 20], [-138, 212, 20], [-136, 212, 20], [-134, 212, 20], [-132, 212, 20], [-130, 212, 20], [-128, 212, 20], [-126, 212, 20], [-124, 212, 20], [-122, 212, 20], [-120, 212, 20], [-118, 212, 20], [-116, 212, 20], [-114, 212, 20], [-112, 212, 20], [-110, 212, 20], [-108, 212, 20], [-106, 212, 20], [-104, 212, 20], [-102, 212, 20], [-100, 212, 20], [-98, 212, 20], [-96, 212, 20], [-94, 212, 20], [-92, 212, 20], [-90, 212, 20], [-88, 212, 20], [-86, 212, 20], [-84, 212, 20], [-82, 212, 20], [-80, 212, 20], [-78, 212, 20], [-76, 212, 20], [-74, 212, 20], [-72, 212, 20], [-70, 212, 20], [-68, 212, 20], [-66, 212, 20], [-64, 212, 20], [-62, 210, 20], [-60, 208, 20], [-58, 208, 20], [-56, 210, 20], [-54, 212, 20], [-52, 212, 20], [-50, 212, 20], [-48, 210, 20], [-46, 208, 20], [-44, 206, 20], [-42, 204, 20], [-40, 202, 20], [-38, 200, 20], [-36, 198, 20], [-34, 196, 20], [-32, 194, 20], [-30, 192, 20], [-28, 190, 20], [-26, 188, 20], [-24, 186, 20], [-22, 184, 20], [-20, 182, 20], [-18, 180, 20], [-16, 178, 20], [-14, 176, 20], [-12, 174, 20], [-10, 172, 20], [-8, 170, 20], [-6, 168, 20], [-4, 166, 20], [-2, 164, 20], [0, 162, 20], [2, 160, 20], [4, 158, 20], [6, 156, 20], [8, 154, 20], [10, 152, 20], [12, 150, 20], [14, 148, 20], [16, 146, 20], [18, 144, 20], [20, 142, 20], [22, 140, 20], [24, 138, 20], [26, 136, 20], [28, 134, 20], [30, 134, 20], [32, 134, 20], [34, 134, 20], [36, 134, 20], [38, 134, 20], [40, 134, 20], [42, 134, 20], [44, 134, 20], [46, 134, 20], [48, 134, 20], [50, 134, 20], [52, 134, 20], [54, 134, 20], [56, 134, 20], [58, 134, 20], [60, 134, 20], [62, 134, 20], [64, 134, 20], [66, 134, 20], [68, 134, 20], [70, 134, 20], [72, 134, 20], [74, 134, 20], [76, 134, 20], [78, 132, 20], [80, 130, 20], [82, 128, 20], [84, 126, 20], [86, 124, 20], [88, 122, 20], [90, 120, 20], [92, 118, 20], [94, 116, 20], [96, 114, 20], [98, 112, 20], [100, 110, 20], [102, 108, 20], [104, 106, 20], [106, 104, 20], [108, 102, 20], [110, 100, 20], [112, 98, 20], [114, 96, 20], [116, 94, 20], [118, 92, 20], [120, 90, 20], [122, 88, 20], [124, 86, 20], [126, 84, 20], [128, 82, 20], [130, 80, 20], [132, 78, 20], [134, 76, 20], [136, 74, 20], [138, 72, 20], [140, 70, 20], [142, 68, 20], [144, 66, 20], [146, 64, 20], [148, 62, 20], [150, 60, 20], [152, 58, 20], [154, 56, 20], [156, 54, 20], [158, 52, 20], [160, 50, 20], [162, 48, 20], [164, 46, 20], [166, 44, 20], [168, 42, 20], [170, 40, 20], [172, 38, 20], [174, 36, 20], [176, 34, 20], [178, 32, 20], [180, 30, 20], [182, 28, 20], [184, 26, 20], [186, 24, 20], [188, 22, 20], [190, 20, 20], [192, 18, 20], [194, 16, 20], [196, 14, 20], [198, 12, 20], [200, 10, 20], [202, 8, 20], [204, 6, 20], [206, 4, 20], [208, 2, 20], [210, 0, 20], [212, -2, 20], [214, -4, 20], [216, -6, 20], [218, -8, 20], [220, -10, 20], [220, -12, 20], [220, -14, 20], [220, -16, 20], [220, -18, 20], [220, -20, 20], [220, -22, 20], [220, -24, 20], [220, -26, 20], [220, -28, 20], [220, -30, 20], [220, -32, 20], [220, -34, 20], [220, -36, 20], [220, -38, 20], [220, -40, 20], [220, -42, 20], [220, -44, 20], [220, -46, 20], [220, -48, 20], [220, -50, 20], [220, -52, 20], [220, -54, 20], [220, -56, 20], [220, -58, 20], [220, -60, 20], [220, -62, 20], [220, -64, 20], [220, -66, 20], [220, -68, 20], [220, -70, 20], [220, -72, 20], [220, -74, 20], [220, -76, 20], [220, -78, 20], [220, -80, 20], [220, -82, 20], [220, -84, 20], [220, -86, 20], [220, -88, 20], [220, -90, 20], [220, -92, 20], [220, -94, 20], [220, -96, 20], [220, -98, 20], [220, -100, 20], [220, -102, 20], [220, -104, 20], [220, -106, 20], [220, -108, 20], [220, -110, 20], [220, -112, 20], [220, -114, 20], [220, -116, 20], [220, -118, 20], [220, -120, 20], [220, -122, 20], [220, -124, 20], [220, -126, 20], [220, -128, 20], [220, -130, 20], [220, -132, 20], [220, -134, 20], [220, -136, 20], [220, -138, 20], [220, -140, 20], [220, -142, 20], [220, -144, 20], [220, -146, 20], [220, -148, 20], [220, -150, 20], [220, -152, 20], [220, -154, 20], [220, -156, 20], [220, -158, 20], [220, -160, 20], [220, -162, 20], [220, -164, 20], [220, -166, 20], [220, -168, 20], [220, -170, 20], [220, -172, 20], [220, -174, 20], [220, -176, 20], [220, -178, 20], [220, -180, 20], [220, -182, 20], [220, -184, 20], [220, -186, 20], [220, -188, 20], [220, -190, 20], [220, -192, 20], [220, -194, 20], [220, -196, 20], [220, -198, 20], [220, -200, 20], [220, -202, 20], [220, -204, 20], [220, -206, 20], [220, -208, 20], [220, -210, 20], [220, -212, 20], [220, -214, 20], [220, -216, 20], [220, -218, 20], [220, -220, 20], [220, -222, 20], [220, -224, 20], [220, -226, 20], [220, -228, 20], [220, -230, 20], [220, -232, 20], [220, -234, 20], [220, -236, 20], [220, -238, 20], [220, -240, 20], [220, -242, 20], [222, -244, 20], [224, -246, 20], [226, -248, 20], [228, -250, 20], [230, -252, 20], [232, -254, 20], [234, -256, 20], [236, -258, 20], [238, -260, 20], [240, -262, 20], [242, -264, 20], [244, -266, 20], [246, -268, 20], [248, -270, 20], [250, -272, 20], [252, -274, 20], [254, -276, 20], [256, -278, 20], [258, -280, 20], [260, -282, 20], [262, -284, 20], [264, -286, 20], [266, -288, 20], [268, -290, 20], [270, -292, 20], [272, -292, 20], [274, -292, 20], [276, -292, 20], [278, -292, 20], [280, -292, 20], [282, -292, 20], [284, -292, 20], [286, -292, 20], [288, -292, 20], [290, -292, 20], [292, -292, 20], [294, -292, 20], [296, -292, 20], [298, -292, 20], [300, -292, 20], [302, -292, 20], [304, -292, 20], [306, -292, 20], [308, -292, 20], [310, -292, 20], [312, -292, 20], [314, -292, 20], [316, -292, 20], [318, -292, 20], [320, -292, 20], [322, -292, 20], [324, -292, 20], [326, -292, 20], [328, -292, 20], [330, -292, 20], [332, -292, 20], [334, -292, 20], [336, -292, 20], [338, -292, 20], [340, -292, 20], [342, -292, 20], [344, -292, 20], [346, -292, 20], [348, -292, 20], [350, -292, 20], [352, -292, 20], [354, -292, 20], [356, -292, 20], [358, -292, 20], [360, -292, 20], [362, -292, 20], [364, -292, 20], [366, -292, 20], [368, -292, 20], [370, -290, 20], [372, -288, 20], [374, -286, 20], [376, -284, 20], [378, -282, 20], [380, -280, 20], [382, -278, 20], [384, -276, 20], [386, -274, 20], [388, -272, 20], [390, -270, 20], [392, -268, 20], [394, -266, 20], [396, -264, 20], [398, -264, 20], [400, -266, 20], [402, -264, 20], [404, -262, 20], [406, -264, 20], [408, -266, 20], [410, -268, 20], [412, -270, 20], [414, -272, 20], [416, -274, 20], [418, -276, 20], [420, -274, 20], [422, -272, 20], [424, -272, 20], [426, -272, 20], [428, -272, 20], [430, -272, 20], [432, -274, 20], [434, -276, 20], [436, -274, 20], [438, -272, 20], [440, -272, 20], [442, -272, 20], [444, -272, 20], [446, -274, 20], [448, -276, 20], [450, -278, 20], [452, -276, 20], [454, -274, 20], [456, -272, 20], [458, -272, 20], [460, -272, 20], [462, -272, 20], [464, -272, 20], [466, -274, 20], [468, -276, 20], [470, -276, 20], [472, -274, 20], [474, -272, 20], [476, -272, 20], [478, -272, 20], [480, -272, 20], [482, -272, 20], [484, -274, 20], [486, -276, 20], [488, -276, 20], [490, -274, 20], [492, -272, 20], [494, -272, 20], [496, -272, 20], [498, -272, 20], [500, -272, 20], [502, -272, 20], [504, -274, 20], [506, -276, 20], [508, -278, 20], [510, -280, 20], [512, -282, 20], [514, -284, 20], [516, -286, 20], [518, -288, 20], [520, -290, 20], [522, -292, 20], [524, -292, 20], [526, -292, 20], [528, -292, 20], [530, -292, 20], [532, -292, 20], [534, -292, 20], [536, -292, 20], [538, -292, 20], [540, -292, 20], [542, -292, 20], [544, -292, 20], [546, -292, 20], [548, -292, 20], [550, -292, 20], [552, -292, 20], [554, -292, 20], [556, -292, 20], [558, -292, 20], [560, -292, 20], [562, -292, 20], [564, -292, 20], [566, -292, 20], [568, -292, 20], [570, -292, 20], [572, -292, 20], [574, -292, 20], [576, -292, 20], [578, -292, 20], [580, -292, 20], [582, -292, 20], [584, -292, 20], [586, -292, 20], [588, -292, 20], [590, -292, 20], [592, -292, 20], [594, -292, 20], [596, -292, 20], [598, -292, 20], [600, -292, 20], [602, -292, 20], [604, -292, 20], [606, -292, 20], [608, -292, 20], [610, -292, 20], [612, -292, 20], [614, -292, 20], [616, -292, 20], [618, -292, 20], [620, -292, 20], [622, -292, 20], [624, -292, 20], [626, -292, 20], [628, -292, 20], [630, -292, 20], [632, -292, 20], [634, -292, 20], [636, -292, 20], [638, -292, 20], [640, -292, 20], [642, -292, 20], [644, -292, 20], [646, -292, 20], [648, -292, 20], [650, -292, 20], [652, -292, 20], [654, -292, 20], [656, -292, 20], [658, -292, 20], [660, -292, 20], [662, -292, 20], [664, -292, 20], [666, -292, 20], [668, -292, 20], [670, -292, 20], [672, -292, 20], [674, -292, 20], [676, -292, 20], [678, -292, 20], [680, -292, 20], [682, -292, 20], [684, -292, 20], [686, -292, 20], [688, -292, 20]];
const multiplier = 2;

var n = 0;

var mid_x = 652;
var mid_y = 380;

function addText(text, x, y, group, floor, mid_x, mid_y) {
    /* Function to add room names at certain locations */
    
    var loader = new THREE.FontLoader();
    loader.load('https://threejs.org/examples/fonts/optimer_regular.typeface.json', function(font) {

        var textGeo = new THREE.TextGeometry(text, {
            font: font,
            size: 20,
            height: 1,
        });
        var textMaterial = new THREE.MeshPhongMaterial({
            color: 0x000000,
            visible: true
        });
        var mesh = new THREE.Mesh(textGeo, textMaterial);
        mesh.position.set((x - mid_x) * multiplier, (mid_y - y) * multiplier, 50+floor*50);
        mesh.name = "text1";
        mesh.layers.set(1);
        group.add(mesh);
        
        mesh = new THREE.Mesh(textGeo, textMaterial);
        mesh.position.set((x - mid_x) * multiplier, (mid_y - y) * multiplier, 50+floor*50);
        mesh.name = "text2";
        mesh.layers.set(2);
        group.add(mesh);
    });
};

function addLines(points, group, floor) {
    /* Function add walls at certain locations */
    
    let x1, y1, x2, y2, w;
    x1 = points[0];
    y1 = points[1];
    x2 = points[2];
    y2 = points[3];
    w = points[4] + 1;
    const shape = new THREE.Shape();
    shape.moveTo((x1 - mid_x) * multiplier, (mid_y - y1) * multiplier);
    shape.lineTo((x2 - mid_x) * multiplier, (mid_y - y2) * multiplier);
    shape.lineTo((x2 - mid_x + w) * multiplier, (mid_y - y2) * multiplier);
    shape.lineTo((x1 - mid_x + w) * multiplier, (mid_y - y1) * multiplier);
    shape.lineTo((x1 - mid_x) * multiplier, (mid_y - y1) * multiplier);

    const geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);
    const material = new THREE.MeshPhongMaterial({
        color: 0xffffff
    });
    const mesh = new THREE.Mesh(geometry, material);
    mesh.castShadow = true;
    mesh.receiveShadow = true;
    mesh.position.set(0, 0, floor*50);
    group.add(mesh);
};

function changeFloor() {
    if (btn.value == "All Floors") {
        for (let i=0; i<groups.length; i++) {
            groups[i].visible = true;
        }
    }
    else{
        for (let i=0; i<groups.length; i++) {
            groups[i].visible = false;
        }
        visibility = btn.value
        groups[btn.value].visible = true;
    }
};

function resize() {
    camera.aspect = window.innerWidth/window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight)

    insetwidth = window.innerWidth / 3;
    insetheight = window.innerHeight / 3;
    camera_first.aspect = insetwidth/insetheight;
    camera_first.updateProjectionMatrix();
}

function toggle_navigation() {
    if (travel) {
        travel = false
    } else {
        travel = true
    }
}

function animate() {
    requestAnimationFrame(animate);
    controls.update();
    scene.traverse (function (object) {
        if (object instanceof THREE.Mesh) {
            if (object.name == "text1") {
                object.quaternion.copy( camera.quaternion );
            }
            if (object.name == "text2") {
                object.quaternion.copy( camera_first.quaternion );
            }
        }
    });
    renderer.setViewport(0, 0, window.innerWidth, window.innerHeight)
    renderer.render(scene, camera);
    renderer.clearDepth();
    renderer.setScissorTest(true);
    renderer.setScissor(
        window.innerWidth - insetwidth - 16,
        window.innerHeight - insetheight - 16,
        insetwidth,
        insetheight,
    );
    renderer.setViewport(
        window.innerWidth - insetwidth - 16,
        window.innerHeight - insetheight - 16,
        insetwidth,
        insetheight,
    );
    renderer.render(scene, camera_first);
    renderer.setScissorTest(false);
    
    // Move first person view camera
    
    if (travel) {
        if (n < path.length) {
            camera_first.position.set(path[n][0], path[n][1], 20+Math.sin(n/6)/4);
            n += 75;
        }
        if (n < path.length) {
            camera_first.lookAt(path[n][0], path[n][1], 20+Math.sin((n-75)/6)/4);
            n -= 74;
        }
        if (n > 1) {
            camera_first.rotation.x = Math.PI / 2;
            camera_first.rotation.z = 0;
        }
    }
};

function render_model(model) {
    
    $('#loadingText').html("Rendering model...");
    
    //Get JSON model attributes
    const num_floors = model["num_floors"];
    const list_of_text = model["1"]["rooms"];
    const list_of_points = model["1"]["points"];
    const map = model["1"]["map"];
    
    // Setting initial values
    
    visibility = 0;
    size = 20;
    travel = false;
    groups = new Array();
    
    // Create Three.js renderer
    
    renderer = new THREE.WebGLRenderer();
    renderer.setPixelRatio(window.devicePixelRatio); //get the correct pixel detail on portable devices
    renderer.domElement.style.position = "absolute";
    renderer.setSize(window.innerWidth, window.innerHeight);
    renderer.setClearColor(0xefebd9, 1); // Default background color
    document.body.appendChild(renderer.domElement);
    
    // Create Three.js scene
    
    scene = new THREE.Scene();
    const axesHelper = new THREE.AxesHelper(200);
    scene.add(axesHelper);
    
    // Bird eye view camera
    
    camera = new THREE.PerspectiveCamera(
        90, //FOV
        window.innerWidth / window.innerHeight, //aspect
        1, //near clipping plane
        25000 //far clipping plane
    );
    camera.layers.enable(1);
    camera.position.set(0, 0, 800);
    camera.lookAt(0, 0, 0);
    
    // First person view camera
    
    camera_first = new THREE.PerspectiveCamera(
        90, //FOV
        window.innerWidth / window.innerHeight, //aspect
        1, //near clipping plane
        2500 //far clipping plane
    );
    camera_first.layers.enable(2);
    camera_first.position.set(path[0][0], path[0][1], path[0][2]);
    camera_first.rotation.x = Math.PI / 2;
    camera_first.rotation.z = 0;
    
    const camera_first_helper = new THREE.CameraHelper(camera_first);
    scene.add(camera_first_helper);
    
    // Create floor GUI
    
    let floor_btn = document.createElement("select");
    floor_btn.add = "Floor 1";
    floor_btn.add = "Floor 2";
    floor_btn.setAttribute("id", "currentFloor");
    floor_btn.setAttribute("name", "Floor");
    document.body.appendChild(floor_btn);
    floor_btn.addEventListener("change", changeFloor);
    floor_btn.style.backgroundColor = "white";
    floor_btn.style.position = "absolute";
    
    // let perspective_btn = document.createElement("input");
    // document.body.appendChild(perspective_btn);
    // floor_btn.setAttribute("type", "button");
    // floor_btn.setAttribute("name", "Perspective");
    // perspective_btn.style.position = "absolute";
    // perspective_btn.style.top = 100;
    
    
    var newOption = document.createElement("option");
    newOption.setAttribute("value", "All Floors");
    node = document.createTextNode("All Floors");
    newOption.appendChild(node);
    document.getElementById("currentFloor").appendChild(newOption);
    
    controls = new THREE.TrackballControls(camera, renderer.domElement);
    controls.rotateSpeed = 0;
    
    const color = 0xFFFFFF;
    const intensity = 1.5;
    const light = new THREE.DirectionalLight(color, intensity);
    light.position.set(400, 400, 800);
    light.target.position.set(0, 0, 0);
    light.castShadow = true;
    scene.add(light);
    scene.add(light.target);
    const light_helper = new THREE.DirectionalLightHelper(light, 200);
    scene.add(light_helper);
   
    for (let i = 0; i < num_floors; i++) {
        let list_of_text = model[(i + 1).toString()]["rooms"];
        let list_of_points = model[(i + 1).toString()]["points"];
        group = new THREE.Group();
        var newOption = document.createElement("option");
        newOption.setAttribute("value", i);
        node = document.createTextNode("Floor " + String(i + 1));
        newOption.appendChild(node);
        document.getElementById("currentFloor").appendChild(newOption);
        for (let j = 0; j < list_of_points.length; j++) {
            addLines(list_of_points[j], group, i);
        }
        for (let j = 0; j < list_of_text.length; j++){
            addText(list_of_text[j][0], list_of_text[j][1], list_of_text[j][2], group, i, mid_x, mid_y);
        }
        scene.add(group);
        groups.push(group);
        mid_x = 424;
        mid_y = 351;
    }
   
    resize();
    animate();  
    renderer.domElement.addEventListener("click", toggle_navigation);
    window.addEventListener("resize", resize);
    $('#loadingScreen').remove();
}